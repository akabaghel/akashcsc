// Initialize the portal
document.addEventListener('DOMContentLoaded', function() {
  console.log('Akash Jan Seva Kendra Portal Loaded Successfully');
  
  // Add smooth scrolling for navigation links
  document.querySelectorAll('nav a').forEach(link => {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      const targetId = this.getAttribute('href').substring(1);
      const targetElement = document.getElementById(targetId);
      
      if (targetElement) {
        targetElement.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });

  // Add click functionality for action buttons
  document.querySelectorAll('.action-button').forEach(button => {
    button.addEventListener('click', function() {
      const buttonText = this.textContent.trim();
      
      // Add loading animation
      const originalText = this.innerHTML;
      this.innerHTML = '<span class="loading"></span> Loading...';
      
      setTimeout(() => {
        this.innerHTML = originalText;
        alert(`${buttonText} - Feature coming soon! This portal is under development.`);
      }, 1500);
    });
  });

  // Add click functionality for content links
  document.querySelectorAll('.content-list a').forEach(link => {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      const linkText = this.textContent.trim();
      
      // Show notification
      showNotification(`${linkText} - Link will be activated soon!`);
    });
  });

  // Add entrance animation to content sections
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver(function(entries) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.style.opacity = '1';
        entry.target.style.transform = 'translateY(0)';
      }
    });
  }, observerOptions);

  // Apply animation to content sections
  document.querySelectorAll('.content-section').forEach((section, index) => {
    section.style.opacity = '0';
    section.style.transform = 'translateY(30px)';
    section.style.transition = `opacity 0.6s ease ${index * 0.1}s, transform 0.6s ease ${index * 0.1}s`;
    observer.observe(section);
  });

  // Apply animation to action buttons
  document.querySelectorAll('.action-button').forEach((button, index) => {
    button.style.opacity = '0';
    button.style.transform = 'translateY(20px)';
    button.style.transition = `opacity 0.5s ease ${index * 0.05}s, transform 0.5s ease ${index * 0.05}s`;
    
    setTimeout(() => {
      button.style.opacity = '1';
      button.style.transform = 'translateY(0)';
    }, 100);
  });
});

// Notification function
function showNotification(message) {
  // Create notification element
  const notification = document.createElement('div');
  notification.className = 'notification';
  notification.textContent = message;
  
  // Style the notification
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: linear-gradient(135deg, #1e3c72, #2a5298);
    color: white;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    z-index: 10000;
    font-weight: 500;
    max-width: 300px;
    word-wrap: break-word;
    animation: slideIn 0.3s ease-out;
  `;
  
  // Add animation keyframes
  if (!document.querySelector('#notification-styles')) {
    const style = document.createElement('style');
    style.id = 'notification-styles';
    style.textContent = `
      @keyframes slideIn {
        from {
          transform: translateX(100%);
          opacity: 0;
        }
        to {
          transform: translateX(0);
          opacity: 1;
        }
      }
      @keyframes slideOut {
        from {
          transform: translateX(0);
          opacity: 1;
        }
        to {
          transform: translateX(100%);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(style);
  }
  
  // Add to page
  document.body.appendChild(notification);
  
  // Remove after 3 seconds
  setTimeout(() => {
    notification.style.animation = 'slideOut 0.3s ease-in';
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    }, 300);
  }, 3000);
}

// Add current time display functionality
function updateTime() {
  const now = new Date();
  const timeString = now.toLocaleString('en-IN', {
    timeZone: 'Asia/Kolkata',
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
  
  console.log('Current Time:', timeString);
}

// Update time every minute
setInterval(updateTime, 60000);
updateTime(); // Initial call

// Add search functionality (if needed later)
function initializeSearch() {
  // This function can be expanded to add search functionality
  console.log('Search functionality ready to be implemented');
}

// Performance monitoring
window.addEventListener('load', function() {
  console.log('Page fully loaded');
  console.log('Performance:', {
    'Load Time': performance.now() + 'ms',
    'DOM Ready': document.readyState
  });
});

// Error handling
window.addEventListener('error', function(event) {
  console.error('JavaScript Error:', event.error);
});

// Add keyboard navigation support
document.addEventListener('keydown', function(event) {
  // Press 'Escape' to close notifications
  if (event.key === 'Escape') {
    const notifications = document.querySelectorAll('.notification');
    notifications.forEach(notification => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    });
  }
});
